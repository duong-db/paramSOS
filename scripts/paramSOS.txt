# Written by duong-db on 24 Dec, 2023
# https://github.com/duong-db/paramSOS
# Version 23.12

print("Sum of Squares (SOS) program for symmetric polynomials (a, b, c) of degree 6");
print("[sigma, prod, getParam, getSOS]");
print("Example");
print("[Step 1]>  getParam(a^6 + b^6 + c^6 - a*b*c* (a^3 + b^3 + c^3))");
print("[Step 2]>  getSOS(a^6 + b^6 + c^6 - a*b*c* (a^3 + b^3 + c^3), -1) ");

# print("[Step 1]>  getParam(sigma((b^3 - c^3)^2) - 2/9*(a^3  + b^3 + c^3 - 3*a*b*c)^2)");
# print("[Step 2]>  getSOS(sigma((b^3 - c^3)^2) - 2/9*(a^3  + b^3 + c^3 - 3*a*b*c)^2, -1/2)");

#############################################################################################################################
sigma:= proc(f)
	local g;
	g:= unapply(f,a,b,c);
	g(a,b,c) + g(b,c,a) + g(c,a,b);
	end proc:

prod:= proc(f)
	local g;
	g:= unapply(f,a,b,c);
	g(a,b,c) * g(b,c,a) * g(c,a,b);
	end proc:

#############################################################################################################################
getSOS11:= proc(f)
	local m1, m2, m3, m4, m5, m6, x0, x1, x2, x3, y1, y2, y3, y4, g1, g2, g3, g4;

	m1:= coeff(f,a^6);
	m2:= coeff(coeff(f,a^5),b);
	m3:= coeff(coeff(f,a^4),b^2);
	m4:= coeff(coeff(coeff(f,a^4),b),c);
	m5:= coeff(coeff(f,a^3),b^3);
	m6:= coeff(coeff(coeff(f,a^3),b^2),c);
	
	x0:= 0;
	y2:= 0;
	
	y1:= 0;
	y3:=1/2*m3+1/4*m4;
	y4:= 1/2*m3-1/4*m4;

	g1:= x0*(a^3 - b^3) + x1*a^2*b + x2*b^2*c - (x1 + x2)*c^2*a - x1*a*b^2 - x2*c*a^2 + (x1 + x2)*b*c^2;
	g2:= sigma(a^3)+x3*sigma(a^2*(b+c))-(3+6*x3)*a*b*c;
	g3:= sigma(a^2*(b+c))-6*a*b*c;
	g4:= (a-b)*(b-c)*(c-a);
	
	sigma(factor(y1*g1^2)) + factor(y2*g2^2) + factor(y3*g3^2) + factor(y4*g4^2);
	end proc:

#############################################################################################################################
getSOS12:= proc(f)
	local m1, m2, m3, m4, m5, m6, x0, x1, x2, x3, y1, y2, y3, y4, g1, g2, g3, g4;

	m1:= coeff(f,a^6);
	m2:= coeff(coeff(f,a^5),b);
	m3:= coeff(coeff(f,a^4),b^2);
	m4:= coeff(coeff(coeff(f,a^4),b),c);
	m5:= coeff(coeff(f,a^3),b^3);
	m6:= coeff(coeff(coeff(f,a^3),b^2),c);
	
	x0:= 0;
	y2:= 0;
	
	x1:= 1;
	x2:= -(8*m3+3*m4+3*m5+2*m6)/(4*m3+3*m4+m6);
	y1:= (1/18)*(4*m3+3*m4+m6)^2/(8*m3+3*m4+3*m5+2*m6);
	y3:= -(1/4)*(2*m3*m4+2*m3*m5+4*m3*m6+m4^2+m4*m5+2*m4*m6+m5^2+2*m5*m6+m6^2)/(8*m3+3*m4+3*m5+2*m6);
	y4:= (1/12)*(32*m3^2-6*m3*m4-6*m3*m5+4*m3*m6-9*m4^2-9*m4*m5-6*m4*m6-9*m5^2-6*m5*m6-m6^2)/(8*m3+3*m4+3*m5+2*m6);

	g1:= x0*(a^3 - b^3) + x1*a^2*b + x2*b^2*c - (x1 + x2)*c^2*a - x1*a*b^2 - x2*c*a^2 + (x1 + x2)*b*c^2;
	g2:= sigma(a^3)+x3*sigma(a^2*(b+c))-(3+6*x3)*a*b*c;
	g3:= sigma(a^2*(b+c))-6*a*b*c;
	g4:= (a-b)*(b-c)*(c-a);
	
	sigma(factor(y1*g1^2)) + factor(y2*g2^2) + factor(y3*g3^2) + factor(y4*g4^2);
	end proc:

#############################################################################################################################
getSOS21:= proc(f, x2)
	local m1, m2, m3, m4, m5, m6, x0, x1, x3, y1, y2, y3, y4, g1, g2, g3, g4;
	
	m1:= coeff(f,a^6);
	m2:= coeff(coeff(f,a^5),b);
	m3:= coeff(coeff(f,a^4),b^2);
	m4:= coeff(coeff(coeff(f,a^4),b),c);
	m5:= coeff(coeff(f,a^3),b^3);
	m6:= coeff(coeff(coeff(f,a^3),b^2),c);
	
	x0:= 1;
	x1:= -(18*m1*x2+16*m2*x2+4*m3*x2+3*m4*x2+m6*x2+6*m1+12*m2+12*m3+3*m4+6*m5+3*m6)/(12*m1+14*m2+8*m3+3*m4+3*m5+2*m6);
	x3:= (3/2)*(3*m2*x2^2+10*m1*x2+4*m2*x2+4*m3*x2+2*m4*x2+m5*x2+m6*x2+2*m1+7*m2+4*m3+m4+2*m5+m6)/(9*m1*x2^2-18*m1*x2-3*m1-14*m2-8*m3-3*m4-3*m5-2*m6);
	
	y1:= (1/18)*(12*m1+14*m2+8*m3+3*m4+3*m5+2*m6)/(x2-1)^2;
	y2:= (1/9)*(9*m1*x2^2-18*m1*x2-3*m1-14*m2-8*m3-3*m4-3*m5-2*m6)/(x2-1)^2;
	y3:= -(1/12)*(756*m1^3*x2^3+1836*m1^2*m2*x2^3+216*m1^2*m3*x2^3+270*m1^2*m4*x2^3+54*m1^2*m5*x2^3+216*m1^2*m6*x2^3+1512*m1*m2^2*x2^3+540*m1*m2*m3*x2^3+378*m1*m2*m4*x2^3+216*m1*m2*m5*x2^3+324*m1*m2*m6*x2^3+54*m1*m3*m4*x2^3+54*m1*m3*m5*x2^3+108*m1*m3*m6*x2^3+27*m1*m4^2*x2^3+27*m1*m4*m5*x2^3+54*m1*m4*m6*x2^3+27*m1*m5^2*x2^3+54*m1*m5*m6*x2^3+27*m1*m6^2*x2^3+378*m2^3*x2^3+216*m2^2*m3*x2^3+81*m2^2*m4*x2^3+81*m2^2*m5*x2^3+54*m2^2*m6*x2^3+1620*m1^3*x2^2+4644*m1^2*m2*x2^2+2808*m1^2*m3*x2^2+810*m1^2*m4*x2^2+810*m1^2*m5*x2^2+216*m1^2*m6*x2^2+4176*m1*m2^2*x2^2+3996*m1*m2*m3*x2^2+1458*m1*m2*m4*x2^2+972*m1*m2*m5*x2^2+432*m1*m2*m6*x2^2+576*m1*m3^2*x2^2+486*m1*m3*m4*x2^2+54*m1*m3*m5*x2^2-36*m1*m3*m6*x2^2+81*m1*m4^2*x2^2+81*m1*m4*m5*x2^2-81*m1*m5^2*x2^2-108*m1*m5*m6*x2^2-45*m1*m6^2*x2^2+1386*m2^3*x2^2+1800*m2^2*m3*x2^2+801*m2^2*m4*x2^2+549*m2^2*m5*x2^2+450*m2^2*m6*x2^2+576*m2*m3^2*x2^2+504*m2*m3*m4*x2^2+360*m2*m3*m5*x2^2+288*m2*m3*m6*x2^2+108*m2*m4^2*x2^2+162*m2*m4*m5*x2^2+126*m2*m4*m6*x2^2+54*m2*m5^2*x2^2+90*m2*m5*m6*x2^2+36*m2*m6^2*x2^2+972*m1^3*x2+4644*m1^2*m2*x2+3240*m1^2*m3*x2+1242*m1^2*m4*x2+1458*m1^2*m5*x2+1080*m1^2*m6*x2+6012*m1*m2^2*x2+8244*m1*m2*m3*x2+2898*m1*m2*m4*x2+3348*m1*m2*m5*x2+2124*m1*m2*m6*x2+2880*m1*m3^2*x2+2034*m1*m3*m4*x2+2322*m1*m3*m5*x2+1476*m1*m3*m6*x2+378*m1*m4^2*x2+783*m1*m4*m5*x2+522*m1*m4*m6*x2+486*m1*m5^2*x2+594*m1*m5*m6*x2+189*m1*m6^2*x2+1974*m2^3*x2+3648*m2^2*m3*x2+1263*m2^2*m4*x2+1179*m2^2*m5*x2+618*m2^2*m6*x2+2112*m2*m3^2*x2+1608*m2*m3*m4*x2+1224*m2*m3*m5*x2+720*m2*m3*m6*x2+306*m2*m4^2*x2+468*m2*m4*m5*x2+276*m2*m4*m6*x2+162*m2*m5^2*x2+180*m2*m5*m6*x2+48*m2*m6^2*x2+384*m3^3*x2+480*m3^2*m4*x2+288*m3^2*m5*x2+192*m3^2*m6*x2+198*m3*m4^2*x2+252*m3*m4*m5*x2+168*m3*m4*m6*x2+54*m3*m5^2*x2+72*m3*m5*m6*x2+24*m3*m6^2*x2+27*m4^3*x2+54*m4^2*m5*x2+36*m4^2*m6*x2+27*m4*m5^2*x2+36*m4*m5*m6*x2+12*m4*m6^2*x2+108*m1^3+972*m1^2*m2+648*m1^2*m3+270*m1^2*m4+270*m1^2*m5+216*m1^2*m6+2412*m1*m2^2+3348*m1*m2*m3+1314*m1*m2*m4+1512*m1*m2*m5+1152*m1*m2*m6+1152*m1*m3^2+882*m1*m3*m4+1026*m1*m3*m5+756*m1*m3*m6+162*m1*m4^2+405*m1*m4*m5+288*m1*m4*m6+216*m1*m5^2+324*m1*m5*m6+117*m1*m6^2+1750*m2^3+3744*m2^2*m3+1383*m2^2*m4+1719*m2^2*m5+1230*m2^2*m6+2688*m2*m3^2+1920*m2*m3*m4+2448*m2*m3*m5+1680*m2*m3*m6+342*m2*m4^2+882*m2*m4*m5+606*m2*m4*m6+540*m2*m5^2+738*m2*m5*m6+252*m2*m6^2+640*m3^3+672*m3^2*m4+864*m3^2*m5+576*m3^2*m6+234*m3*m4^2+612*m3*m4*m5+408*m3*m4*m6+378*m3*m5^2+504*m3*m5*m6+168*m3*m6^2+27*m4^3+108*m4^2*m5+72*m4^2*m6+135*m4*m5^2+180*m4*m5*m6+60*m4*m6^2+54*m5^3+108*m5^2*m6+72*m5*m6^2+16*m6^3)/((x2-1)*(12*m1+14*m2+8*m3+3*m4+3*m5+2*m6)*(9*m1*x2^2-18*m1*x2-3*m1-14*m2-8*m3-3*m4-3*m5-2*m6));
	y4:= -(1/12*(252*m1^2*x2^2+564*m1*m2*x2^2+24*m1*m3*x2^2+90*m1*m4*x2^2+18*m1*m5*x2^2+24*m1*m6*x2^2+340*m2^2*x2^2+92*m2*m3*x2^2+114*m2*m4*x2^2+60*m2*m5*x2^2+44*m2*m6*x2^2-32*m3^2*x2^2+6*m3*m4*x2^2+6*m3*m5*x2^2-4*m3*m6*x2^2+9*m4^2*x2^2+9*m4*m5*x2^2+6*m4*m6*x2^2+9*m5^2*x2^2+6*m5*m6*x2^2+m6^2*x2^2+792*m1^2*x2+1536*m1*m2*x2+1104*m1*m3*x2+360*m1*m4*x2+288*m1*m5*x2+240*m1*m6*x2+664*m2^2*x2+920*m2*m3*x2+312*m2*m4*x2+168*m2*m5*x2+188*m2*m6*x2+256*m3^2*x2+204*m3*m4*x2+60*m3*m5*x2+104*m3*m6*x2+36*m4^2*x2+36*m4*m5*x2+42*m4*m6*x2-18*m5^2*x2+6*m5*m6*x2+10*m6^2*x2+252*m1^2+924*m1*m2+600*m1*m3+198*m1*m4+342*m1*m5+168*m1*m6+760*m2^2+1004*m2*m3+330*m2*m4+528*m2*m5+272*m2*m6+352*m3^2+222*m3*m4+366*m3*m5+188*m3*m6+36*m4^2+117*m4*m5+60*m4*m6+90*m5^2+96*m5*m6+25*m6^2))/((12*m1+14*m2+8*m3+3*m4+3*m5+2*m6)*(x2-1)^2);
	
	g1:= x0*(a^3 - b^3) + x1*a^2*b + x2*b^2*c - (x1 + x2)*c^2*a - x1*a*b^2 - x2*c*a^2 + (x1 + x2)*b*c^2;
	g2:= sigma(a^3)+x3*sigma(a^2*(b+c))-(3+6*x3)*a*b*c;
	g3:= sigma(a^2*(b+c))-6*a*b*c;
	g4:= (a-b)*(b-c)*(c-a);
	
	sigma(factor(y1*g1^2)) + factor(y2*g2^2) + factor(y3*g3^2) + factor(y4*g4^2);
	end proc:

#############################################################################################################################
getSOS22:= proc(f)
	local m1, m2, m3, m4, m5, m6, x2, x3, y1, y2, y3, y4, g1, g2, g3, g4;

	m1:= coeff(f,a^6);
	m2:= coeff(coeff(f,a^5),b);
	m3:= coeff(coeff(f,a^4),b^2);
	m4:= coeff(coeff(coeff(f,a^4),b),c);
	m5:= coeff(coeff(f,a^3),b^3);
	m6:= coeff(coeff(coeff(f,a^3),b^2),c);
	
	y1:= 0;
	y2:= m1;
	y3:= (1/4)*(6*m1^2+4*m1*m2+2*m1*m3+m1*m4-m2^2)/m1;
	y4:= -2*m2-(3/2)*m1+(1/2)*m3-(1/4)*m4;

	x3:= (1/2)*m2/m1;
	
	g1:= x0*(a^3 - b^3) + x1*a^2*b + x2*b^2*c - (x1 + x2)*c^2*a - x1*a*b^2 - x2*c*a^2 + (x1 + x2)*b*c^2;
	g2:= sigma(a^3)+x3*sigma(a^2*(b+c))-(3+6*x3)*a*b*c;
	g3:= sigma(a^2*(b+c))-6*a*b*c;
	g4:= (a-b)*(b-c)*(c-a);

	sigma(factor(y1*g1^2)) + factor(y2*g2^2) + factor(y3*g3^2) + factor(y4*g4^2);	
	end proc:

#############################################################################################################################
getParam:=proc(f)
	local m1, m2, m3, m4, m5, m6, x2, y2, y3, y4, x, A2;

	m1:= coeff(f,a^6);
	m2:= coeff(coeff(f,a^5),b);
	m3:= coeff(coeff(f,a^4),b^2);
	m4:= coeff(coeff(coeff(f,a^4),b),c);
	m5:= coeff(coeff(f,a^3),b^3);
	m6:= coeff(coeff(coeff(f,a^3),b^2),c);

	A2:= 12*m1+14*m2+8*m3+3*m4+3*m5+2*m6;
	
	if (m1 <> 0) and (A2 <> 0) then 
		y2:= (1/9)*(9*m1*x2^2-18*m1*x2-3*m1-14*m2-8*m3-3*m4-3*m5-2*m6)/(x2-1)^2;

		y3:= -(1/12)*(756*m1^3*x2^3+1836*m1^2*m2*x2^3+216*m1^2*m3*x2^3+270*m1^2*m4*x2^3+54*m1^2*m5*x2^3+216*m1^2*m6*x2^3+1512*m1*m2^2*x2^3+540*m1*m2*m3*x2^3+378*m1*m2*m4*x2^3+216*m1*m2*m5*x2^3+324*m1*m2*m6*x2^3+54*m1*m3*m4*x2^3+54*m1*m3*m5*x2^3+108*m1*m3*m6*x2^3+27*m1*m4^2*x2^3+27*m1*m4*m5*x2^3+54*m1*m4*m6*x2^3+27*m1*m5^2*x2^3+54*m1*m5*m6*x2^3+27*m1*m6^2*x2^3+378*m2^3*x2^3+216*m2^2*m3*x2^3+81*m2^2*m4*x2^3+81*m2^2*m5*x2^3+54*m2^2*m6*x2^3+1620*m1^3*x2^2+4644*m1^2*m2*x2^2+2808*m1^2*m3*x2^2+810*m1^2*m4*x2^2+810*m1^2*m5*x2^2+216*m1^2*m6*x2^2+4176*m1*m2^2*x2^2+3996*m1*m2*m3*x2^2+1458*m1*m2*m4*x2^2+972*m1*m2*m5*x2^2+432*m1*m2*m6*x2^2+576*m1*m3^2*x2^2+486*m1*m3*m4*x2^2+54*m1*m3*m5*x2^2-36*m1*m3*m6*x2^2+81*m1*m4^2*x2^2+81*m1*m4*m5*x2^2-81*m1*m5^2*x2^2-108*m1*m5*m6*x2^2-45*m1*m6^2*x2^2+1386*m2^3*x2^2+1800*m2^2*m3*x2^2+801*m2^2*m4*x2^2+549*m2^2*m5*x2^2+450*m2^2*m6*x2^2+576*m2*m3^2*x2^2+504*m2*m3*m4*x2^2+360*m2*m3*m5*x2^2+288*m2*m3*m6*x2^2+108*m2*m4^2*x2^2+162*m2*m4*m5*x2^2+126*m2*m4*m6*x2^2+54*m2*m5^2*x2^2+90*m2*m5*m6*x2^2+36*m2*m6^2*x2^2+972*m1^3*x2+4644*m1^2*m2*x2+3240*m1^2*m3*x2+1242*m1^2*m4*x2+1458*m1^2*m5*x2+1080*m1^2*m6*x2+6012*m1*m2^2*x2+8244*m1*m2*m3*x2+2898*m1*m2*m4*x2+3348*m1*m2*m5*x2+2124*m1*m2*m6*x2+2880*m1*m3^2*x2+2034*m1*m3*m4*x2+2322*m1*m3*m5*x2+1476*m1*m3*m6*x2+378*m1*m4^2*x2+783*m1*m4*m5*x2+522*m1*m4*m6*x2+486*m1*m5^2*x2+594*m1*m5*m6*x2+189*m1*m6^2*x2+1974*m2^3*x2+3648*m2^2*m3*x2+1263*m2^2*m4*x2+1179*m2^2*m5*x2+618*m2^2*m6*x2+2112*m2*m3^2*x2+1608*m2*m3*m4*x2+1224*m2*m3*m5*x2+720*m2*m3*m6*x2+306*m2*m4^2*x2+468*m2*m4*m5*x2+276*m2*m4*m6*x2+162*m2*m5^2*x2+180*m2*m5*m6*x2+48*m2*m6^2*x2+384*m3^3*x2+480*m3^2*m4*x2+288*m3^2*m5*x2+192*m3^2*m6*x2+198*m3*m4^2*x2+252*m3*m4*m5*x2+168*m3*m4*m6*x2+54*m3*m5^2*x2+72*m3*m5*m6*x2+24*m3*m6^2*x2+27*m4^3*x2+54*m4^2*m5*x2+36*m4^2*m6*x2+27*m4*m5^2*x2+36*m4*m5*m6*x2+12*m4*m6^2*x2+108*m1^3+972*m1^2*m2+648*m1^2*m3+270*m1^2*m4+270*m1^2*m5+216*m1^2*m6+2412*m1*m2^2+3348*m1*m2*m3+1314*m1*m2*m4+1512*m1*m2*m5+1152*m1*m2*m6+1152*m1*m3^2+882*m1*m3*m4+1026*m1*m3*m5+756*m1*m3*m6+162*m1*m4^2+405*m1*m4*m5+288*m1*m4*m6+216*m1*m5^2+324*m1*m5*m6+117*m1*m6^2+1750*m2^3+3744*m2^2*m3+1383*m2^2*m4+1719*m2^2*m5+1230*m2^2*m6+2688*m2*m3^2+1920*m2*m3*m4+2448*m2*m3*m5+1680*m2*m3*m6+342*m2*m4^2+882*m2*m4*m5+606*m2*m4*m6+540*m2*m5^2+738*m2*m5*m6+252*m2*m6^2+640*m3^3+672*m3^2*m4+864*m3^2*m5+576*m3^2*m6+234*m3*m4^2+612*m3*m4*m5+408*m3*m4*m6+378*m3*m5^2+504*m3*m5*m6+168*m3*m6^2+27*m4^3+108*m4^2*m5+72*m4^2*m6+135*m4*m5^2+180*m4*m5*m6+60*m4*m6^2+54*m5^3+108*m5^2*m6+72*m5*m6^2+16*m6^3)/((x2-1)*(12*m1+14*m2+8*m3+3*m4+3*m5+2*m6)*(9*m1*x2^2-18*m1*x2-3*m1-14*m2-8*m3-3*m4-3*m5-2*m6));
	
		y4:= -(1/12*(252*m1^2*x2^2+564*m1*m2*x2^2+24*m1*m3*x2^2+90*m1*m4*x2^2+18*m1*m5*x2^2+24*m1*m6*x2^2+340*m2^2*x2^2+92*m2*m3*x2^2+114*m2*m4*x2^2+60*m2*m5*x2^2+44*m2*m6*x2^2-32*m3^2*x2^2+6*m3*m4*x2^2+6*m3*m5*x2^2-4*m3*m6*x2^2+9*m4^2*x2^2+9*m4*m5*x2^2+6*m4*m6*x2^2+9*m5^2*x2^2+6*m5*m6*x2^2+m6^2*x2^2+792*m1^2*x2+1536*m1*m2*x2+1104*m1*m3*x2+360*m1*m4*x2+288*m1*m5*x2+240*m1*m6*x2+664*m2^2*x2+920*m2*m3*x2+312*m2*m4*x2+168*m2*m5*x2+188*m2*m6*x2+256*m3^2*x2+204*m3*m4*x2+60*m3*m5*x2+104*m3*m6*x2+36*m4^2*x2+36*m4*m5*x2+42*m4*m6*x2-18*m5^2*x2+6*m5*m6*x2+10*m6^2*x2+252*m1^2+924*m1*m2+600*m1*m3+198*m1*m4+342*m1*m5+168*m1*m6+760*m2^2+1004*m2*m3+330*m2*m4+528*m2*m5+272*m2*m6+352*m3^2+222*m3*m4+366*m3*m5+188*m3*m6+36*m4^2+117*m4*m5+60*m4*m6+90*m5^2+96*m5*m6+25*m6^2))/((12*m1+14*m2+8*m3+3*m4+3*m5+2*m6)*(x2-1)^2);
	
		x2:= x;
		print(solve({y2>=0, y3>=0, y4>=0}, x));
		print(evalf(solve({y2>=0, y3>=0, y4>=0}, x)));
	else print({`in`(x, R)}) end if:
	
	end proc:

#############################################################################################################################
getSOS:= proc(f, x2)
	local m1, m2, m3, m4, m5, m6, x1, x3, y1, y2, y3, y4, g1, g2, g3, g4, g, A1, A2, B2;
	
	m1:= coeff(f,a^6);
	m2:= coeff(coeff(f,a^5),b);
	m3:= coeff(coeff(f,a^4),b^2);
	m4:= coeff(coeff(coeff(f,a^4),b),c);
	m5:= coeff(coeff(f,a^3),b^3);
	m6:= coeff(coeff(coeff(f,a^3),b^2),c);
	
	A1:= (4*m3+3*m4+m6)*(8*m3+3*m4+3*m5+2*m6);
	
	A2:= 12*m1+14*m2+8*m3+3*m4+3*m5+2*m6;
	B2:= 8*m1+6*m2+m4-m5;
	
	if (m1 = 0) then
		if (m2 <> 0) then g:= f end if:   
		if (m2 = 0) and (m3 = 0) then g:= f end if:
		if (m2 = 0) and (m3 <> 0) and (A1 = 0) and (m5 = m4) then g:= getSOS11(f) end if:
		if (m2 = 0) and (m3 <> 0) and (A1 = 0) and (m5 <> m4) then g:= f end if:
		if (m2 = 0) and (m3 <> 0) and (A1 <> 0) then g:= getSOS12(f) end if:			
	end if:

	if (m1 <> 0) then   					                             # by default x0 = 1? -> better with this type.
		if (A2 <> 0) then g:= getSOS21(f, x2) end if:      
		if (A2 = 0) and (B2 = 0) then g:= getSOS22(f) end if:    # there are two choices of g?-> the first one is better.
		if (A2 = 0) and (B2 <> 0) then g:= f end if:	
	end if:

	g + factor(f-g);
	end proc:
